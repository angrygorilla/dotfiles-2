#!/usr/bin/env bash

os_upgrade() {
    sudo true
    sudo aptitude update -q
    sudo aptitude safe-upgrade -y
    sudo aptitude autoclean -q -y
    sudo aptitude clean -q -y
}

hadolint_upgrade() {
    if command -v docker >/dev/null 2>&1; then
        docker pull hadolint/hadolint
    fi
}

pyenv_upgrade() {
    if command -v pyenv >/dev/null 2>&1; then
        pyenv update
        pyenv rehash
    fi
}
nodenv_upgrade() {
    if command -v pyenv >/dev/null 2>&1; then
        nodenv update
        nodenv rehash
    fi
}

npm_upgrade() (
    if command -v nodenv >/dev/null 2>&1; then
        # use global system node version
        nodenv shell $"(cat ${HOME}/.nodenv/version | tr -d \n)"
    fi

    # upgrade npm
    npm install -g npm

    if command -v nodenv >/dev/null 2>&1; then
        # unset to the previous shell being set here
        nodenv rehash
        nodenv shell -
    fi
)

neovim_clients_upgrade() {
    if [ -d "${PYENV_ROOT}/versions/neovim2" ]; then
        "${PYENV_ROOT}"/versions/neovim2/bin/pip install --upgrade -r ./neovim-requirements.txt
    fi
    if [ -d "${PYENV_ROOT}/versions/neovim3" ]; then
        "${PYENV_ROOT}"/versions/neovim3/bin/pip install --upgrade -r ./neovim-requirements.txt
    fi

    if command -v npm >/dev/null 2>&1; then
        npm upgrade -g neovim
        if command -v nodenv >/dev/null 2>&1; then
            nodenv rehash
        fi
    fi
}

neovim_plugings_upgrade() {
    nvim +PlugUpgrade +PlugInstall +PlugClean +PlugUpdate +qall!
}

os_upgrade
hadolint_upgrade
pyenv_upgrade
nodenv_upgrade
npm_upgrade
neovim_clients_upgrade
neovim_plugings_upgrade
