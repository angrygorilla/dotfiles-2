#!/usr/bin/env bash

set -e

CONFIG="install.conf.yaml"
DOTBOT_DIR="dotbot"

DOTBOT_BIN="bin/dotbot"
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

USERNAME="${1:-""}"
EMAIL="${2:-""}"

check_submodules() {
    local hasOutdated=0

    git submodule update --init --quiet --recursive

    for git_module in $(git submodule status | awk '{print $2}'); do
        cd $PWD/$git_module

        git fetch origin

        if [[ $(git log HEAD..origin/master --oneline | wc -l) -ne 0 ]]; then
            (tput setaf 1 ; echo "$git_module is outdated")
            hasOutdated=1
        fi

        cd - &>/dev/null
    done
    unset git_module

    if [ $hasOutdated -eq 1 ]; then
        exit 1
    fi
}

execute_dotbot() {
    cd "${BASEDIR}"
    git submodule update --init --quiet --recursive "${DOTBOT_DIR}"

    "${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG}" "${@}"
}

setup_git() {
    # generating GPK key to sign the commits
    # setup gpk key
    gpg2 --full-gen-key

    # assumed the highest rsa length:
    local signingKey=""
    signingKey=$(gpg2 --list-secret-keys --keyid-format LONG | grep -B 1 ${EMAIL} | grep sec | awk -F"[/ ]+" '/rsa4096/{print $3}')

    cat > $HOME/.gitconfig.local << EOF
[user]
    name=${USERNAME}
    email=${EMAIL}
    signingKey=${signingKey}

[gpg]
    program=gpg2

[commit]
    gpgsign=true
EOF

    echo "Remember to upload the key to Github"
}

install_packages() {
    sudo apt install aptitude -y -q

    sudo aptitude install -y -V -D -Z \
        git \
        zsh \
        ccache \
        tree \
        neovim \
        silversearcher-ag \
        gnupg2

}

if [ ! -f $HOME/.gitconfig.local ]; then
    echo "kornicameister/dotfiles - first run"

    args=("$@")
    argsCount=${#args[@]}
    if [ ${argsCount} -ne 2 ]; then
        (tput setaf 1 ; echo "Invalid arguments, example: ./install {git_user} {git_email}")
    fi

    if [ -z "${USERNAME}" ]; then
        (tput setaf 1 ; echo "git_user must be set")
        exit 1
    fi
    if [ -z "${EMAIL}" ]; then
        (tput setaf 1 ; echo "git_email must be set")
        exit 1
    fi

    echo "kornicameister/dotfiles: init"

    install_packages
    setup_git
    execute_dotbot
else
    echo "kornicameister/dotfiles : update"

    check_submodules
    execute_dotbot
    (pyenv update ; pyenv rehash)
    (nodenv update ; nodenv rehash)
fi

